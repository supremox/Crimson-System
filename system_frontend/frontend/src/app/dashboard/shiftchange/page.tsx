"use client";

import React, { useState } from "react";
import { Table, Avatar, Upload, Button, DatePicker, Input } from "antd";
import type { TableColumnsType } from "antd";
import { createStyles } from "antd-style";
import { GetAttendanceRecord } from "@/app/hooks/useGetAttendance";
import { DeleteOutlined, FilterOutlined, FolderViewOutlined, SearchOutlined, UploadOutlined, WalletOutlined } from "@ant-design/icons";
import axiosInstance from "../../../../server/instance_axios";
import dayjs from "dayjs";
import { getQueryClient } from "@/app/components/getQueryClient";
import ShiftChangeFiling from "./modal/ShiftChangeFiling";


export default function ShiftChangePage() {
  const { useGetAttendance } = GetAttendanceRecord();

  const { data: attendance, isLoading, refetch } = useGetAttendance();


  const dynamicColumns: TableColumnsType = [
    {
      title: <span className="flex items-center justify-center mx-auto">Payroll Generated</span>,
      width: 200,
      render: (_, row) => (
            <span className="flex items-center justify-center mx-auto">{row.employee_name}</span>
      ),
    },
    {
      title: <span className="flex items-center justify-center mx-auto">Total Amount</span>,
      width: 100,
      render: () => <span className="flex items-center justify-center mx-auto">$ 1,000,000</span>,
    },
    {
      title: <span className="flex items-center justify-center mx-auto">Generated by</span>,
      width: 100,
      render: () => <span className="flex items-center justify-center mx-auto">admin admin</span>,
    },
    {
      title: <span className="flex items-center justify-center mx-auto">Payroll Status</span>,
      width: 100,
      render: () => 
        <span 
            className={`bg-green-600 flex items-center justify-center mx-auto`}
            style={{
                height: "30px",
                width: "110px",
                borderRadius: "20px",
                color: "white",
            }}
        >
            Approve
        </span>,
    },
    {
      title: <span className="flex items-center justify-center">Action</span>,
      key: "action",
      fixed: "right",
      width: 100,
      render: () => 
      <span className="flex items-center justify-center gap-3">
        <Button
            icon={<FolderViewOutlined />}
            type="primary"
            className="h-10 shadow-lg"
            // onClick={handleFilter}
        >
            View
        </Button>
        <Button
            icon={<DeleteOutlined />}
            type="primary"
            danger
            className="h-10 shadow-lg"
            // onClick={handleFilter}
        >
            Delete
        </Button>
      </span> 
    },
  ];


  return (
    <>
      <div className="flex flex-col">
        <div className="bg-white rounded-lg mx-5 mt-4 mb-5 p-5">
          <h3 className="text-2xl font-bold font-sans">Shift Change Management</h3>
          <p className="ml-4 mt-2 italic">This is a Shift Change Management were you can Generate Payroll for Specific date and see it in the table. <br /> 
              Using Shift Change you can see the total amout to pay by selecting The Start date and End date</p>
        </div>
        <div className="bg-white rounded-lg mx-5 mb-5 p-5">
            <div className="flex flex-wrap justify-end items-center gap-4 mt-4">
                <ShiftChangeFiling />
            </div>


            <Table
              className="mx-5 mb-5 mt-4 shadow-lg shadow-blue-900"
              size="middle"
              columns={dynamicColumns}
              dataSource={attendance}
              loading={isLoading}
              rowKey={(row) => row.id}
              scroll={{ x: "max-content", y: 55 * 5 }}
            />
        </div>
      </div>
    </>
  );
}


