# Generated by Django 5.2.3 on 2025-07-15 00:56

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('payroll', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='PagIbigContributionRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min_salary', models.DecimalField(decimal_places=2, max_digits=10)),
                ('max_salary', models.DecimalField(decimal_places=2, max_digits=10)),
                ('employee_rate', models.DecimalField(decimal_places=2, help_text='Percentage rate (e.g. 1.00 or 2.00)', max_digits=4)),
                ('employer_rate', models.DecimalField(decimal_places=2, help_text='Percentage rate (e.g. 2.00)', max_digits=4)),
            ],
        ),
        migrations.CreateModel(
            name='PhilhealthContributionRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_rate', models.DecimalField(decimal_places=2, help_text='Percentage rate (e.g. 1.00 or 2.00)', max_digits=4)),
                ('employer_rate', models.DecimalField(decimal_places=2, help_text='Percentage rate (e.g. 2.00)', max_digits=4)),
                ('premium_rate', models.DecimalField(decimal_places=2, default=5.0, help_text='Total premium rate (employer + employee)', max_digits=4)),
                ('salary_floor', models.DecimalField(decimal_places=2, default=10000.0, help_text='Minimum salary used for premium calculation', max_digits=10)),
                ('salary_ceiling', models.DecimalField(decimal_places=2, default=100000.0, help_text='Maximum salary used for premium calculation', max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='SSSContribution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('compensation_from', models.DecimalField(decimal_places=2, max_digits=10)),
                ('compensation_to', models.DecimalField(decimal_places=2, max_digits=10)),
                ('regular_ss_credit', models.DecimalField(decimal_places=2, max_digits=10)),
                ('ec_credit', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('mpf_credit', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('total_credit', models.DecimalField(decimal_places=2, max_digits=10)),
                ('employer_regular_ss', models.DecimalField(decimal_places=2, max_digits=10)),
                ('employer_mpf', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('employer_ec', models.DecimalField(decimal_places=2, max_digits=10)),
                ('employer_total', models.DecimalField(decimal_places=2, max_digits=10)),
                ('employee_regular_ss', models.DecimalField(decimal_places=2, max_digits=10)),
                ('employee_mpf', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('employee_total', models.DecimalField(decimal_places=2, max_digits=10)),
                ('overall_total', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
            options={
                'verbose_name': 'SSS Contribution',
                'verbose_name_plural': 'SSS Contributions',
            },
        ),
        migrations.CreateModel(
            name='WithholdingTaxBracket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('frequency', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('semi-monthly', 'Semi-Monthly'), ('monthly', 'Monthly')], max_length=15)),
                ('min_compensation', models.DecimalField(decimal_places=2, max_digits=12)),
                ('max_compensation', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('base_tax', models.DecimalField(decimal_places=2, max_digits=12)),
                ('percentage_over', models.DecimalField(decimal_places=2, max_digits=5)),
                ('excess_over', models.DecimalField(decimal_places=2, max_digits=12)),
            ],
            options={
                'ordering': ['frequency', 'min_compensation'],
            },
        ),
        migrations.RenameField(
            model_name='computepay',
            old_name='gross_pay',
            new_name='total_gross_pay',
        ),
        migrations.RenameField(
            model_name='computepay',
            old_name='net_pay',
            new_name='total_net_pay',
        ),
        migrations.AddField(
            model_name='computepay',
            name='total_late_deduction',
            field=models.CharField(default='0', max_length=50),
        ),
        migrations.AddField(
            model_name='computepay',
            name='total_overtime_pay',
            field=models.CharField(default='0', max_length=50),
        ),
        migrations.AddField(
            model_name='computepay',
            name='total_undertime_deduction',
            field=models.CharField(default='0', max_length=50),
        ),
    ]
